// test_ocr.js - –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç OCR API
import fetch from 'node-fetch';
import FormData from 'form-data';
import fs from 'fs';
import path from 'path';

async function testOCR() {
    try {
        console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OCR API...');

        // –ò—â–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        const testImagePath = 'docs_images/2025-10-25_13-40-49.png';
        if (!fs.existsSync(testImagePath)) {
            console.log('‚ùå –¢–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
            return;
        }

        console.log(`üì∏ –ù–∞–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${testImagePath}`);

        // –°–æ–∑–¥–∞–µ–º FormData
        const formData = new FormData();
        formData.append('image', fs.createReadStream(testImagePath), {
            filename: path.basename(testImagePath),
            contentType: 'image/png'
        });

        console.log('üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ /api/upload...');

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        const response = await fetch('http://localhost:3000/api/upload', {
            method: 'POST',
            body: formData
        });

        if (!response.ok) {
            const errorText = await response.text();
            console.log('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞:', errorText);
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const result = await response.json();

        if (result.success) {
            console.log('‚úÖ OCR –æ–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å–ø–µ—à–Ω–∞!');
            console.log('üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç:');
            console.log('‚îÄ'.repeat(50));
            console.log(result.text || result.message || '–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–µ–Ω');
            console.log('‚îÄ'.repeat(50));
        } else {
            console.log('‚ùå OCR –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å:', result.error || result.message);
        }

    } catch (error) {
        console.log('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
    }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testOCR();
